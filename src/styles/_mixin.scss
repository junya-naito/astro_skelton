@use "variables";
@use "sass:math";

/* ***************************************
# Mixins 汎用mixin
*************************************** */
// RESPONSIVE
// @include mq(sp) { ... }
// @include mq(tb) { ... }
// --------------------
@mixin mq($breakpoint: md) {
	@media #{map-get(variables.$breakpoints, $breakpoint)} {
		@content;
	}
}

/* ===============================================
fz
=============================================== */
@mixin fz($size) {
	// font-size: $size + px;
	$base: 16;
	font-size: ($size / $base) + rem;
}

// 数値をremに変換する
@function rem($pixels) {
	@return math.div($pixels, 16) * 1rem;
}

// リキッドレイアウト対応
@function strip-unit($number) {
	@if type-of($number) == "number" and not unitless($number) {
		@return math.div($number, $number * 0 + 1);
	}
	@return $number;
}
@function vw($window_width, $size) {
	@return math.div($size, $window_width) * 100vw;
}

$inner: 1280px;
html {
	//375px~767px
	font-size: 16px;
	@include mq("upmd") {
		font-size: vw(strip-unit($inner), 16);
	}
	//inner~max-screen
	@media (min-width: $inner) {
		font-size: 16px;
	}
}
